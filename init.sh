#!/bin/bash

# Script d'initialisation pour NoMoreBooking Docker

set -e

echo "ðŸ”§ Initialisation de l'environnement NoMoreBooking"

# Couleurs
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# VÃ©rifier les prÃ©requis
log_info "VÃ©rification des prÃ©requis..."

if ! command -v docker &> /dev/null; then
    log_error "Docker n'est pas installÃ©. Installation nÃ©cessaire."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    log_error "Docker Compose n'est pas installÃ©. Installation nÃ©cessaire."
    exit 1
fi

log_info "âœ… Docker et Docker Compose sont installÃ©s"

# VÃ©rifier que Docker est en fonctionnement
if ! docker info &> /dev/null; then
    log_error "Docker n'est pas en cours d'exÃ©cution. Veuillez dÃ©marrer Docker."
    exit 1
fi

log_info "âœ… Docker est en cours d'exÃ©cution"

# CrÃ©er les fichiers d'environnement s'ils n'existent pas
if [ ! -f "noMoreBook/.env" ]; then
    log_warning "Fichier .env manquant, crÃ©ation d'un fichier par dÃ©faut..."
    cp noMoreBook/.env.dev noMoreBook/.env
fi

# VÃ©rifier les permissions
log_info "VÃ©rification des permissions..."
chmod +x deploy.sh

# Nettoyer les anciens conteneurs si ils existent
log_info "Nettoyage des anciens conteneurs..."
docker-compose down -v --remove-orphans 2>/dev/null || true
docker-compose -f docker-compose.dev.yml down -v --remove-orphans 2>/dev/null || true

# Affichage des informations
echo ""
log_info "ðŸŽ‰ Initialisation terminÃ©e !"
echo ""
echo "Commandes disponibles :"
echo "  ./deploy.sh prod     - DÃ©ployer en production"
echo "  ./deploy.sh dev      - DÃ©ployer en dÃ©veloppement"
echo "  make help           - Voir toutes les commandes"
echo ""
echo "Pour commencer :"
echo "  ${GREEN}./deploy.sh dev${NC}     (dÃ©veloppement)"
echo "  ${GREEN}./deploy.sh prod${NC}    (production)"
